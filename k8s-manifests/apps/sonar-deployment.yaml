apiVersion: v1
kind: Namespace
metadata:
  name: sonarqube
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres
  namespace: sonarqube
type: Opaque
data:
  password: U29uYXJAZG1pbjEK
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: sonarqube
  name: sonar-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonar-extensions
  namespace: sonarqube
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sonarqube
  name: sonarqube-svc
  namespace: sonarqube
spec:
  ports:
    - name: sonar
      port: 80
      protocol: TCP
      targetPort: 9000
  selector:
    app: sonarqube
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube
  namespace: sonarqube
  labels:
    app: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      terminationGracePeriodSeconds: 15
      initContainers:
        - name: fix-the-volume-permission-extension
          image: busybox
          command:
            - sh
            - -c
            - chown -R 1000:1000 /opt/sonarqube/extensions
          securityContext:
            privileged: true
          volumeMounts:
            - name: sonar-extensions
              mountPath: /opt/sonarqube/extensions
        - name: fix-the-volume-permission-data
          image: busybox
          command:
            - sh
            - -c
            - chown -R 1000:1000 /opt/sonarqube/data
          securityContext:
            privileged: true
          volumeMounts:
            - name: sonar-data
              mountPath: /opt/sonarqube/data
        - name: sonarqube-es-init
          image: busybox:1.27.2
          command: ["sysctl", "-w", "vm.max_map_count=262144"]
          securityContext:
            privileged: true
      containers:
        - name: sonarqube
          image: sonarqube
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 500m
              memory: 1024Mi
            limits:
              cpu: 2000m
              memory: 2048Mi
          ports:
            - name: sonarqube
              containerPort: 9000
          env:
            - name: SONARQUBE_JDBC_URL
              valueFrom:
                configMapKeyRef:
                  key: url
                  name: sonar-config
            # - name: http_proxy
            #   valueFrom:
            #     configMapKeyRef:
            #       key: http_proxy
            #       name: sonar-config
            # - name: https_proxy
            #   valueFrom:
            #     configMapKeyRef:
            #       key: https_proxy
            #       name: sonar-config
            - name: SONARQUBE_JDBC_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: sonar-postgres-secrets
            - name: SONARQUBE_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: sonar-postgres-secrets
          volumeMounts:
            - mountPath: /opt/sonarqube/data/
              name: sonar-data
            - mountPath: /opt/sonarqube/extensions/
              name: sonar-extensions
      volumes:
        - name: sonar-data
          persistentVolumeClaim:
            claimName: sonar-data
        - name: sonar-extensions
          persistentVolumeClaim:
            claimName: sonar-extensions
---
apiVersion: v1
data:
  url: jdbc:postgresql://sonar-postgres-service:5432/sonar_db
#  https_proxy: http://192.168.12.240:8080
#  http_proxy: http://192.168.12.240:8080
kind: ConfigMap
metadata:
  name: sonar-config
  namespace: sonarqube